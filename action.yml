name: "Neon Database Create Branch Action"
author: "Neon Database"
description: "Creates a new Neon Postgres branch based a parent branch."
branding:
  icon: "box"
  color: "green"

inputs:
  project_id:
    required: true
    type: string
  parent_branch_id:
    required: true
    type: string
  branch_name:
    required: false
    type: string
  api_key:
    required: true
  username:
    required: true
  passowrd:
    required: true

outputs:
  branch_id:
    description: "Newly created branch Id"
    value: ${{ steps.output-branch-id.outputs.branch_id }}
  project_id:
    description: "Project Id"
    value: ${{ steps.output-project-id.outputs.project_id }}
  host:
    description: "Newly created endpoint host"
    value: ${{ steps.output-host.outputs.host }}

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        OUTPUT=`curl -X 'POST' \
        'https://console.neon.tech/api/v2/projects/${{inputs.project_id}}/branches' \
        -H 'accept: application/json' \
        -H 'Authorization: Bearer ${{ inputs.api_key }}' \
        -H 'Content-Type: application/json' \
        -d '{
        "endpoints": [
          {
            "type": "read_write"
          }
        ],
        "branch": {
          "parent_id": "${{inputs.parent_branch_id}}",
          "name": "${{inputs.branch_name}}"
        }
        }'`
        echo $OUTPUT > output.json
    - uses: notiz-dev/github-action-json-property@release
      id: get_branch_id
      with:
        path: 'output.json'
        prop_path: 'branch.id'
    - run: echo "branch_id=${{steps.get_branch_id.outputs.prop}}" >> $GITHUB_OUTPUT
      shell: bash
      id: output-branch-id
    - uses: notiz-dev/github-action-json-property@release
      id: get_project_id
      with:
        path: 'output.json'
        prop_path: 'branch.project_id'
    - run: echo "project_id=${{steps.get_project_id.outputs.prop}}" >> $GITHUB_OUTPUT
      shell: bash
      id: output-project-id
    - uses: notiz-dev/github-action-json-property@release
      id: get_host
      with:
        path: 'output.json'
        prop_path: 'endpoints[0].host'
    - run: echo "host=${{steps.get_host.outputs.prop}}" >> $GITHUB_OUTPUT
      shell: bash
      id: output-host
